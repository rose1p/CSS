- React Router
React에서 클라이언트 측 라우팅을 구현하기 위한 라이브러리
클라이언트 라우팅 : 웹 어플리케이션에서 URL 경로따라 다른 컴포넌트를 동적으로 랜더링하고, 페이지 간의 전환 내비게이션 터리 가능

React Router를 사용하면 단일 페이지 어플리케이션(Single Page Application, SPA)를 개발할 수 있다
SPA는 맨 처음 모든 정적 리소스(HTML, CSS, JavaScript)를 로드하고 이후 필요한 데이터만 비동기적으로 가져온다.
Route, Switch, Link, BrowerRouter, HashRouter

import (BrowerRouter) from 'react-router-dom';

- 기본 컴포넌트와 라우팅
1)Route : Route 컴포넌트는 특정 경로에 대응하는 컴포넌트를 지정한다.
import {Route} from 'react-router-dom';

fucntion App() {
    return (
        <>
            <Route path="/otherPage" componene={Other} />
        </>
    )
}

/otherPage 경로에 대응해서 Other 컴포넌트가 랜더링된다.

2) Switch : Switch 컴포넌트는 여러 개의 Route 중에서 첫번재로 매칭되는 React만 랜더링한다.
일반적으로 최상위 계층에서 사용되며, 순서대로 첫번째 매칭되는 React만 처리하기 때문에 하나의 컴포넌트만 랜더일되도록 보장할 수 있다.
import {Route, Switch} from 'react-router-dom';

function App() {
    return (
        <Switch>
            <Route exact page="/" component={Home}/>
            <Route path="/adout" component={About}/>
            <Route path="/sell" component={Sell}/>
            <Route component={NotFound}/> 404 페이지
        </Switch> 
    );
}

3) Link : Link 컴포넌트는 클릭 가능한 링크 역할을 하는 컴포넌트다. <a> 태그와 비슷하다. (React Router 네비게이션 시스템)
import {Link} form 'react-router-dom';

function App() {
    return (
        
    )
}