 - DOM(Document object Model)
 웹 페이지를 스크립트 또는 프로그래밍 언어들이 사용할 수 있는 구조로 표현하는 방법
 DOM은 트리구조의 형태로 되어 있다. HTML 문서의 각 요소는 DOM의 노드(node)에 해당한다.

 Document Node : 전체 페이지를 나타낸다. 트리구조 최상위 위치
 Element Node : HTML 요소를 나타낸다. (<body>, <div>, <p>)
 Text Node : HTML 요소 내부의 문자열을 나타낸다.
 Attribute Node : HTML 요소 내부의 속성을 나타낸다.(src, alt)

 // ID로 요소 선택하기
 let title = Document.getElementByID("title");

 // 클레스 이름으로 요소 선택하기
let title = Document.getElementByyClassName("title");

// 태그 이름으로 요소 선택하기
let title = Document.getElementByTagName("p");

// CSS 선택자로 요소 선택하기
let highlight = Document.querySelector('.highlight');
let highlight = Document.querySelectorAll('.highlight');

// 요소 내부의 텍스트 변경하기
title.textContent = "수정한 텍스트";

// 새로운 요소를 생성하고 추가하기
let nowOne = Document.createElement("p");
nowOne.textContent = "새로운 p";
Document.body.appendchild(nowOne);

var myDIV = document.getElementByld("li");
var parent = myDIV.parentElement;
parent.removeChild(myDIV);  // 부모에서 myDIV 객체 삭제

삭제 버튼이 동작하지 않는 이유 : 함수에서 myDIV라는 새로운 <li> 배열을 생성하고 부모를 찾으려고 한다.
removeChild 배열을 전덜을 한다. 컴퓨터가 무엇을 삭제하지?

lst = document.getElementByID("list");
if(lst.lastChild) {
    lst.removeChild(lst.lastChild);
}

lst = document.getElementByTagName("li");
if(lst.lastChild > 0) {
    lastLst = lst[lst.length - 1];
lastLst.parentElement.removeChild(lastLst);
}
